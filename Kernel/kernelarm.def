// Keep these in sync with struct u_data!!
// In our configuration, bools are one byte.
#define U_DATA__U_PTAB_OFFSET        ( 0*4 + 0)  // struct p_tab*
#define U_DATA__U_PAGE_OFFSET        ( 1*4 + 0)  // uint16_t
#define U_DATA__U_PAGE2_OFFSET       ( 1*4 + 2)  // uint16_t
#define U_DATA__U_INSYS_OFFSET       ( 2*4 + 0)  // bool
#define U_DATA__U_CALLNO_OFFSET      ( 2*4 + 1)  // uint8_t
#define U_DATA__U_SYSCALL_SP_OFFSET  ( 3*4 + 0)  // void *
#define U_DATA__U_RETVAL_OFFSET      ( 4*4 + 0)  // uint32_t
#define U_DATA__U_ERROR_OFFSET       ( 5*4 + 0)  // int16_t
#define U_DATA__U_SP_OFFSET          ( 6*4 + 0)  // void *
#define U_DATA__U_ININTERRUPT_OFFSET ( 7*4 + 0)  // bool
#define U_DATA__U_CURSIG_OFFSET      ( 7*4 + 1)  // int8_t
#define U_DATA__U_ARGN_OFFSET        ( 8*4 + 0)  // uint32_t
#define U_DATA__U_ARGN1_OFFSET       ( 9*4 + 0)  // uint32_t
#define U_DATA__U_ARGN2_OFFSET       (10*4 + 0)  // uint32_t
#define U_DATA__U_ARGN3_OFFSET       (11*4 + 0)  // uint32_t
#define U_DATA__U_ISP_OFFSET         (12*4 + 0)  // void * (initial stack pointer when _exec()ing)
#define U_DATA__U_TOP_OFFSET         (13*4 + 0)  // void*
#define U_DATA__U_BREAK_OFFSET       (14*4 + 0)  // void*
#define U_DATA__U_SIGVEC_OFFSET      (15*4 + 0)  // table of function pointers (void *)

// Keep these in sync with struct p_tab!!
P_TAB__P_STATUS_OFFSET      = 0
P_TAB__P_TTY_OFFSET         = 1
P_TAB__P_PID_OFFSET         = 2
P_TAB__P_PAGE_OFFSET        = 24

P_RUNNING                   = 1            // value from include/kernel.h
P_READY                     = 2            // value from include/kernel.h

EAGAIN                      = 11           // value from include/kernel.h

